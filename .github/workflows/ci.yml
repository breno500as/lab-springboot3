name: Java CI with Maven

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Docker Login
      uses: docker/login-action@v3.0.0
      with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_PASSWORD }}
         
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
        
    - name: Amazon ECR "Login" Action for GitHub Actions
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Set up JDK 20
      uses: actions/setup-java@v3
      with:
        java-version: '20'
        distribution: 'adopt'
        cache: maven
        
    - name: Build with Maven
      run: mvn clean package
      
    - name: Docker build 
      run: docker-compose build
      
    - name: Push to Docker Hub
      run: |
       docker tag ${{ secrets.DOCKER_USERNAME }}/lab-springboot3:latest ${{ secrets.DOCKER_USERNAME }}/lab-springboot3:${{github.run_id}} 
       docker push  ${{ secrets.DOCKER_USERNAME }}/lab-springboot3:${{github.run_id}}
       
    - name: Tag, and push image to Amazon ECR
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/lab-springboot3:latest ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/lab-springboot3:latest ${{ secrets.IMAGE_REPO_URL }}:latest

        docker push ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}
        docker push ${{ secrets.IMAGE_REPO_URL }}:latest
        
    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ${{ secrets.AWS_TASK_DEFINITION_NAME }} --query taskDefinition > task-definition.json
        
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ secrets.CONTAINER_NAME }}
        image: ${{ secrets.IMAGE_REPO_URL }}:latest
        
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ secrets.SERVICE_NAME }}
        cluster: ${{ secrets.CLUSTER_NAME }}
        wait-for-service-stability: true
        
    - name: Push to Docker Hub Container Registry
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/lab-springboot3:latest ${{ secrets.DOCKER_USERNAME }}/lab-springboot3:${{ github.run_id }}

        docker push ${{ secrets.DOCKER_USERNAME }}/lab-springboot3:${{ github.run_id }}
        docker push ${{ secrets.DOCKER_USERNAME }}/lab-springboot3:latest

